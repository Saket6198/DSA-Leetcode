/*
389. Find the Difference

You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

 

Example 1:

Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.
Example 2:

Input: s = "", t = "y"
Output: "y"
 

Constraints:

0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.

*/

#include<iostream>
#include<vector>
#include<string>
#include<unordered_map>

using namespace std;

/* Using unordered_map TC: O(N) SC: O(N) (LESS SPACE EFFICIENT)*/

// class Solution {
// public:
//     char findTheDifference(string s, string t) {
//         if(s.empty())
//             return t[0];
//         unordered_map<char, int>seen;
//         for(auto i : s){
//             seen[i]++;
//         }
//         for(auto i : t){
//             seen[i]--;
//             if(seen[i] < 0)
//                 return i;
//         }
//         return '\0';
//     }
// };

/* Using Sum of ASCII TC: O(N) SC: O(1) */

class Solution {
public:
    char findTheDifference(string s, string t) {
        if(s.empty())
            return t[0];
        int first = 0, second = t[0];
        for(int i = 0; i<s.size(); i++){
            second += t[i+1];
            first += s[i];
        }
        return char(second - first);
    }
};
int main(){
    Solution sol;
    string s, t;
    cout<<"Enter 1st string: ";
    cin>>s;
    cout<<"Enter the 2nd string: ";
    cin>>t;
    cout<<sol.findTheDifference(s,t);
}